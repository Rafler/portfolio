{"version":3,"sources":["data/cv.pdf","data sync /^/.//.*/.lang/.json$","serviceWorker.js","components/ModeChange/ModeChange.js","components/Header/Header.js","components/LanguageChange/LanguageChange.js","components/Home/Home.js","components/About/About.js","components/Portfolio/Portfolio.js","components/Contact/Contact.js","components/Skills/Skills.js","components/BurgerMenuIcon/BurgerMenuIcon.js","components/BurgerMenu/BurgerMenu.js","components/app/App.js","index.js"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ModeChange","theme","setTheme","type","className","onChange","value","checked","Header","content","scrollTo","elem","document","querySelector","scrollIntoView","behavior","onClick","HOME","ABOUT","SKILLS","PORTFOLIO","CONTACTS","LanguageChange","lang","setLang","checkLang","language","changeLanguage","newLang","activeLang","Home","TITLE","DESCRIPTION","src","process","alt","About","Portfolio","slider","useRef","settings","dots","innerWidth","infinite","speed","slidesToShow","slidesToScroll","autoplay","lazyLoad","autoplaySpeed","pauseOnHover","current","slickPrev","ref","data","el","href","link","target","title","slickNext","Contact","BUTTON","MAIL","cv","download","CV","MESSAGE","Skills","Math","round","adaptiveHeight","rate","BurgerMenuIcon","click","menu","BurgerMenu","open","setMenu","__forceSmoothScrollPolyfill__","smoothscroll","polyfill","App","useState","setLanguage","dTheme","setDTheme","openedMenu","useEffect","localStorage","getItem","JSON","parse","body","style","overflowY","position","CONTENT","require","themeChange","setItem","langChange","HEADER","ReactDOM","render","StrictMode","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.6c3e9de6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cv.3b880eda.pdf\";","var map = {\n\t\"./en.lang.json\": 46,\n\t\"./ua.lang.json\": 47\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 45;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from 'react';\n\nimport './ModeChange.scss'\n\nconst ModeChange = ({theme, setTheme}) => {\n    return (\n        <input type=\"checkbox\" className=\"switch\" id=\"switch-1\" onChange={() => setTheme(!theme)} value={theme}\n               checked={theme}/>\n    );\n};\n\nexport default ModeChange;\n","import React from 'react';\n\nimport ModeChange from \"../ModeChange/ModeChange\";\n\nimport './Header.scss';\n\nconst Header = ({theme, setTheme, content}) => {\n    const scrollTo = (elem) => {\n        document.querySelector(elem).scrollIntoView({behavior: 'smooth'});\n    };\n\n    return (\n        <>\n            <header className=\"main-header\" id=\"home\">\n                <a onClick={() => scrollTo('#home')} className=\"main-header__link\">{content.HOME}</a>\n                <a onClick={() => scrollTo(\"#about\")} className=\"main-header__link\">{content.ABOUT}</a>\n                <a onClick={() => scrollTo('#skills')} className=\"main-header__link\">{content.SKILLS}</a>\n                <a onClick={() => scrollTo('#portfolio')} className=\"main-header__link\">{content.PORTFOLIO}</a>\n                <a onClick={() => scrollTo('#contact')} className=\"main-header__link\">{content.CONTACTS}</a>\n                <ModeChange theme={theme} setTheme={setTheme}/>\n            </header>\n        </>\n    );\n};\n\nexport default Header;\n","import React from 'react';\n\nimport './LanguageChange.scss'\n\nconst LanguageChange = ({lang, setLang}) => {\n    const checkLang = (language) => {\n        return language === lang;\n    };\n\n    const changeLanguage = (newLang) => {\n        if (!checkLang(newLang)) {\n            setLang(newLang);\n        }\n    };\n\n    const activeLang = (language) => {\n        return checkLang(language) ? '' : 'unactive'\n    }\n\n    return (\n        <div className=\"language-change\">\n            <span onClick={() => changeLanguage('ua')} className={activeLang('ua')}>UA</span> | <span\n            onClick={() => changeLanguage('en')} className={activeLang('en')}>ENG</span>\n        </div>\n    );\n};\n\nexport default LanguageChange;\n","import React from 'react';\n\nimport LanguageChange from \"../LanguageChange/LanguageChange\";\n\nimport './Home.scss';\n\nconst Home = ({lang, setLang, content}) => {\n    return (\n        <section className=\"home\">\n            <div className=\"home__info\">\n                <h1 className=\"home__info__title\">{content.TITLE}</h1>\n                <p className=\"home__info__description\">{content.DESCRIPTION}</p>\n                <LanguageChange lang={lang} setLang={setLang}/>\n            </div>\n            <img src={`${process.env.PUBLIC_URL}/assets/images/person.jpg`} alt=\"photo\" className=\"home__image\"/>\n        </section>\n    );\n};\n\nexport default Home;\n","import React from 'react';\n\nimport './About.scss'\n\nconst About = ({content}) => {\n    return (\n        <section className=\"about gray\" id=\"about\">\n            <h2 className=\"title\">{content.TITLE}</h2>\n            <p className=\"description\">{content.DESCRIPTION}</p>\n        </section>\n    );\n};\n\nexport default About;\n","import React, {useRef} from 'react';\nimport Slider from \"react-slick\";\n\nimport data from '../../data/portfolio.json'\nimport './Portfolio.scss'\n\nconst Portfolio = ({content}) => {\n    const slider = useRef(null);\n\n    const settings = {\n        dots: window.innerWidth > 768,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        autoplay: true,\n        lazyLoad: true,\n        autoplaySpeed: 5000,\n        pauseOnHover: true,\n        className: 'slides',\n    };\n\n    return (\n        <section className=\"portfolio gray\" id=\"portfolio\">\n            <h2 className=\"title\">{content.TITLE}</h2>\n            <div className=\"wrapper\">\n                <button className=\"arrow left\" onClick={() => slider.current.slickPrev()}/>\n                <Slider ref={slider} {...settings}>\n                    {\n                        data.map(el =>\n                            <div className=\"portfolio__slide\">\n                                <a href={el.link} target=\"_blank\">\n                                    <img src={process.env.PUBLIC_URL + el.href} alt={el.title} className=\"portfolio__slide__image\"/>\n                                </a>\n                                <a target=\"_blank\" className=\"portfolio__slide__title\" href={el.link}>{el.title}</a>\n                            </div>\n                        )\n                    }\n                </Slider>\n                <button className=\"arrow right\" onClick={() => slider.current.slickNext()}/>\n            </div>\n        </section>\n    );\n};\n\nexport default Portfolio;\n","import React from 'react';\n\nimport cv from '../../data/cv.pdf';\nimport './Contact.scss'\n\nconst Contact = ({content}) => {\n    return (\n        <section className=\"contact\" id=\"contact\">\n            <h2 className=\"title\">{content.TITLE}</h2>\n            <p className=\"description\">{content.DESCRIPTION}</p>\n            <div className=\"contact__buttons\">\n                <button className=\"contact__button\"><a className=\"contact__button__text\" href=\"mailto:amuronyk@gmail.com\">{content.BUTTON.MAIL}</a></button>\n                <button className=\"contact__button reversed\"><a className=\"contact__button__text \" href={cv} download=\"CV Andrii Myroniuk\">{content.BUTTON.CV}</a></button>\n            </div>\n            <div className=\"contact__media\">\n                <a target=\"_blank\" href=\"https://www.instagram.com/andrii.lv/\" className=\"contact__media__link inst\"/>\n                <a target=\"_blank\" href=\"https://www.linkedin.com/in/andrii-myroniuk-573921155/\"\n                   className=\"contact__media__link linkedin\"/>\n            </div>\n            <span className=\"contact__message\">{content.MESSAGE}</span>\n        </section>\n    );\n};\n\nexport default Contact;\n","import React, {useRef} from 'react';\nimport Slider from \"react-slick\";\n\nimport data from '../../data/skills.json'\nimport './Skills.scss'\n\nconst Skills = ({content}) => {\n    const slider = useRef(null);\n    const slidesToShow = Math.round(window.innerWidth / 320)\n\n    const settings = {\n        dots: window.innerWidth > 768,\n        infinite: true,\n        speed: 1000,\n        slidesToShow: slidesToShow,\n        slidesToScroll: slidesToShow,\n        autoplay: true,\n        lazyLoad: true,\n        adaptiveHeight: true,\n        autoplaySpeed: 5000,\n        pauseOnHover: true,\n        className: 'slides',\n    };\n\n    return (\n        <section className=\"skills\" id=\"skills\">\n            <h2 className=\"title\">{content.TITLE}</h2>\n            <p className=\"description\">{content.DESCRIPTION}</p>\n            <div className=\"wrapper\">\n                <button className=\"arrow left\" onClick={() => slider.current.slickPrev()}/>\n                <Slider ref={slider} {...settings}>\n                    {\n                        data.map(el =>\n                            <div className=\"skills__slide\">\n                                <img src={process.env.PUBLIC_URL + el.href} alt=\"logo\" className=\"skills__slide__image\"/>\n                                <div className=\"star-rating\" title={el.rate / 5}/>\n                            </div>\n                        )\n                    }\n                </Slider>\n                <button className=\"arrow right\" onClick={() => slider.current.slickNext()}/>\n            </div>\n        </section>\n    );\n};\n\nexport default Skills;\n","import React from 'react';\n\nimport './BurgerMenuIcon.scss'\n\nconst BurgerMenuIcon = ({click, menu}) => {\n    return (\n        <div className={menu ? 'burger-icon open' : 'burger-icon'} onClick={click}>\n            <span/>\n            <span/>\n            <span/>\n            <span/>\n            <span/>\n            <span/>\n        </div>\n    );\n};\n\nexport default BurgerMenuIcon;\n","import React from 'react';\n\nimport ModeChange from \"../ModeChange/ModeChange\";\nimport LanguageChange from \"../LanguageChange/LanguageChange\";\n\nimport './BurgerMenu.scss'\n\nconst BurgerMenu = ({open, content, theme, setTheme, setLang, lang, setMenu}) => {\n    const scrollTo = (elem) => {\n        setMenu(false);\n        document.querySelector(elem).scrollIntoView({behavior: 'smooth'});\n    };\n\n    return (\n        <section className={open ? 'burger-menu open' : 'burger-menu'}>\n            <nav className=\"burger-menu__nav\">\n                <a onClick={() => scrollTo('#home')} className=\"burger-menu__nav__link\">{content.HOME}</a>\n                <a onClick={() => scrollTo(\"#about\")} className=\"burger-menu__nav__link\">{content.ABOUT}</a>\n                <a onClick={() => scrollTo('#skills')} className=\"burger-menu__nav__link\">{content.SKILLS}</a>\n                <a onClick={() => scrollTo('#portfolio')} className=\"burger-menu__nav__link\">{content.PORTFOLIO}</a>\n                <a onClick={() => scrollTo('#contact')} className=\"burger-menu__nav__link\">{content.CONTACTS}</a>\n            </nav>\n            <ModeChange setTheme={setTheme} theme={theme}/>\n            <LanguageChange lang={lang} setLang={setLang}/>\n        </section>\n    );\n};\n\nexport default BurgerMenu;\n","import React, {useState, useEffect} from 'react';\nimport smoothscroll from 'smoothscroll-polyfill';\n\nimport Header from \"../Header/Header\";\nimport Home from \"../Home/Home\";\nimport About from \"../About/About\";\nimport Portfolio from \"../Portfolio/Portfolio\";\nimport Contact from \"../Contact/Contact\";\nimport Skills from \"../Skills/Skills\";\nimport BurgerMenuIcon from \"../BurgerMenuIcon/BurgerMenuIcon\";\nimport BurgerMenu from \"../BurgerMenu/BurgerMenu\";\n\nimport '../../_colors.scss';\nimport './App.scss';\n\nwindow.__forceSmoothScrollPolyfill__ = true;\nsmoothscroll.polyfill();\n\nfunction App() {\n    const [language, setLanguage] = useState('en');\n    const [dTheme, setDTheme] = useState(false);\n    const [openedMenu, setMenu] = useState(false);\n\n    useEffect(() => {\n        const lang = !localStorage.getItem('lang') ? 'en' : localStorage.getItem('lang');\n        const theme = JSON.parse(localStorage.getItem('theme'));\n        setDTheme(theme);\n        setLanguage(lang);\n    }, [])\n\n    useEffect(() => {\n        if (openedMenu) {\n            document.body.style.overflowY = 'hidden';\n            document.body.style.position = 'fixed'\n        } else {\n            document.body.style.overflowY = 'unset';\n            document.body.style.position = 'initial'\n        }\n    }, [openedMenu])\n\n    let CONTENT = require(`../../data/${language}.lang.json`);\n\n    const themeChange = (value) => {\n        localStorage.setItem('theme', value);\n        setDTheme(value);\n    };\n\n    const langChange = (value) => {\n        if (!(localStorage.getItem('lang') === value)) {\n            localStorage.setItem('lang', value);\n        }\n        setLanguage(value);\n    };\n\n    return (\n        <div className={dTheme ? 'darkTheme app' : 'app'}>\n            <BurgerMenuIcon click={() => setMenu(!openedMenu)} menu={openedMenu}/>\n            <BurgerMenu open={openedMenu} content={CONTENT.HEADER} theme={dTheme} setTheme={themeChange} lang={language}\n                        setLang={langChange} setMenu={setMenu}/>\n            <Header theme={dTheme} setTheme={themeChange} content={CONTENT.HEADER}/>\n            <Home lang={language} setLang={langChange} content={CONTENT.HOME}/>\n            <About content={CONTENT.ABOUT}/>\n            <Skills content={CONTENT.SKILLS}/>\n            <Portfolio content={CONTENT.PORTFOLIO}/>\n            <Contact content={CONTENT.CONTACTS}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport * as serviceWorker from './serviceWorker';\nimport App from './components/app/App';\n\nimport './darkTheme.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}